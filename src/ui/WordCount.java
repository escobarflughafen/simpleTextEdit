package ui;

import locale.Strings_zh_CN;
import model.TextFile;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class WordCount {
    private JEditor editor;
    private JPanel panel1;
    private JTable wcTable;
    private JButton OKButton;

    public static int abs_INT(int num) {
        return (num >= 0) ? num : -num;
    }

    public static int wordcount(String str) {
        int count = 0;
        char[] strArr = str.toCharArray();
        for (int i = 0; i < strArr.length; i++) {
            if (strArr[i] == ' ' || strArr[i] == '\n' || strArr[i] == '\t')
                count++;
            else if (i == strArr.length - 1)
                count++;
        }


        return count;
    }

    public WordCount(int posX, int posY, JEditor editor) {
        OKButton.setText(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_COMMAND_CLOSE);
        this.editor = editor;
        String[] headers = {"", ""};
        this.wcTable.setModel(new DefaultTableModel(headers, 4));
        wcTable.getModel().setValueAt(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_WORDS_LABEL, 0, 0);
        wcTable.getModel().setValueAt(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_CHARACTERS_LABEL, 1, 0);
        wcTable.getModel().setValueAt(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_CHASELECTED_LABEL, 2, 0);
        wcTable.getModel().setValueAt(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_LINES_LABEL, 3, 0);
        wcTable.setEnabled(false);
        OKButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        wcTable.getModel().setValueAt(wordcount(editor.getMainEditorPane().getText()), 0, 1);
        wcTable.getModel().setValueAt(String.valueOf(editor.getMainEditorPane().getText().length()), 1, 1);
        wcTable.getModel().setValueAt(String.valueOf(abs_INT(editor.getMainEditorPane().getSelectionStart() - editor.getMainEditorPane().getSelectionEnd())), 2, 1);
        wcTable.getModel().setValueAt(editor.getMainEditorPane().getLineCount(), 3, 1);

        final JFrame frame = new JFrame(Strings_zh_CN.MENU_TOOLS_WORDCOUNT_TITLE);
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setMinimumSize(new Dimension(320, 240));
        frame.setMaximumSize(new Dimension(480, 320));
        frame.setPreferredSize(new Dimension(320, 240));
        frame.setLocation(posX, posY);
        frame.pack();
        frame.setVisible(true);
        OKButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.CENTER);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, BorderLayout.CENTER);
        wcTable = new JTable();
        wcTable.setAutoCreateRowSorter(false);
        wcTable.setFillsViewportHeight(true);
        scrollPane1.setViewportView(wcTable);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        panel1.add(panel3, BorderLayout.SOUTH);
        OKButton = new JButton();
        OKButton.setText("Close");
        panel3.add(OKButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
